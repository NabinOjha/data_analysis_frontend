[{"/home/nabin/practice_project_intern/data_analysis_frontend/src/components/AnalysisDashBoard/AnalysisDashBoard.js":"1","/home/nabin/practice_project_intern/data_analysis_frontend/src/components/SideBar/sidebar.js":"2","/home/nabin/practice_project_intern/data_analysis_frontend/src/components/Signup/signup.js":"3","/home/nabin/practice_project_intern/data_analysis_frontend/src/components/Login/login.js":"4","/home/nabin/practice_project_intern/data_analysis_frontend/src/components/DataTable/datatable.js":"5","/home/nabin/practice_project_intern/data_analysis_frontend/src/components/Banner/Banner.js":"6","/home/nabin/practice_project_intern/data_analysis_frontend/src/components/RangeSlider/rangeslider.js":"7","/home/nabin/practice_project_intern/data_analysis_frontend/src/components/Header/Header.js":"8","/home/nabin/practice_project_intern/data_analysis_frontend/src/index.js":"9","/home/nabin/practice_project_intern/data_analysis_frontend/src/components/DatePicker/DatePicker.js":"10","/home/nabin/practice_project_intern/data_analysis_frontend/src/commons/hooks/useAuth.js":"11","/home/nabin/practice_project_intern/data_analysis_frontend/src/App.js":"12"},{"size":1641,"mtime":1608108925014,"results":"13","hashOfConfig":"14"},{"size":9132,"mtime":1608106649968,"results":"15","hashOfConfig":"14"},{"size":2785,"mtime":1608015743362,"results":"16","hashOfConfig":"14"},{"size":2253,"mtime":1608015710450,"results":"17","hashOfConfig":"14"},{"size":2869,"mtime":1608108891315,"results":"18","hashOfConfig":"14"},{"size":1445,"mtime":1607845924305,"results":"19","hashOfConfig":"14"},{"size":428,"mtime":1608106770019,"results":"20","hashOfConfig":"14"},{"size":2498,"mtime":1608018428680,"results":"21","hashOfConfig":"14"},{"size":142,"mtime":1607836385471,"results":"22","hashOfConfig":"14"},{"size":593,"mtime":1608106767447,"results":"23","hashOfConfig":"14"},{"size":897,"mtime":1608014162305,"results":"24","hashOfConfig":"14"},{"size":1150,"mtime":1608005147730,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"h8giw1",{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/nabin/practice_project_intern/data_analysis_frontend/src/components/AnalysisDashBoard/AnalysisDashBoard.js",["53","54","55"],"/home/nabin/practice_project_intern/data_analysis_frontend/src/components/SideBar/sidebar.js",["56"],"import React, { useState, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\n\nimport RangeSlider from './../RangeSlider/rangeslider';\nimport DatePicker from './../DatePicker/DatePicker';\nimport useApiCall from './../../commons/hooks/apiCall';\n\nconst SideBar = ({ handleRequestFilter }) => {\n\tconst ranges = useRef({});\n\tconst filter = useRef({});\n\tconst [sendRequest] = useApiCall();\n\tconst [name, setName] = useState({\n\t\t\tnameField: '',\n\t\t\tnameValue: '',\n\t\t}),\n\t\t[dateRange, setDateRange] = useState({\n\t\t\tstartDate: '',\n\t\t\tendDate: '',\n\t\t});\n\n\tuseEffect(() => {\n\t\tconst fetchRanges = async () => {\n\t\t\tconst rangesResponse = await sendRequest('GET', '/ranges');\n\t\t\tranges.current = rangesResponse.data;\n\t\t};\n\t\tfetchRanges();\n\t}, []);\n\n\tconst handleNameChange = (e) => {\n\t\tsetName({ ...name, [e.target.name]: e.target.value.trim() });\n\t};\n\n\tconst handleStartDate = (startDate) => {\n\t\tsetDateRange({ ...dateRange, startDate });\n\t};\n\n\tconst handleEndDate = (endDate) => {\n\t\tsetDateRange({ ...dateRange, endDate });\n\t};\n\n\tconst checkAndUpdate = (filterName) => {\n\t\tif (filter.current[filterName]) {\n\t\t\tdelete filter.current[filterName];\n\t\t}\n\t};\n\n\tconst handleNameFilter = (e) => {\n\t\te.preventDefault();\n\t\tconst filterName = name.nameField;\n\n\t\tif (filter.current[filterName]) checkAndUpdate(filterName);\n\t\tfilter.current[filterName] = `${name.nameField}='${name.nameValue}'`;\n\n\t\thandleRequestFilter(filter.current);\n\t};\n\n\tconst handleSalaryRange = (salaryRange) => {\n\t\tconst minSalary = salaryRange[0];\n\t\tconst maxSalary = salaryRange[1];\n\t\tconst filterName = 'avg_salary';\n\t\tif (filter.current[filterName]) checkAndUpdate(filterName);\n\t\tfilter.current[\n\t\t\tfilterName\n\t\t] = `avg_salary={\"lte\":\"${maxSalary}\", \"gte\":\"${minSalary}\"}`;\n\n\t\thandleRequestFilter(filter.current);\n\t};\n\n\tconst handleBranchesRange = (branchRange) => {\n\t\tconst minBranches = branchRange[0];\n\t\tconst maxBranches = branchRange[1];\n\t\tconst filterName = 'total_branches';\n\n\t\tif (filter.current[filterName]) checkAndUpdate(filterName);\n\t\tfilter.current[\n\t\t\tfilterName\n\t\t] = `total_branches={\"lte\":\"${maxBranches}\", \"gte\":\"${minBranches}\"}`;\n\n\t\thandleRequestFilter(filter.current);\n\t};\n\n\tconst handleEmployeesRange = (employeesRange) => {\n\t\tconst minEmpolyees = employeesRange[0];\n\t\tconst maxEmployees = employeesRange[1];\n\t\tconst filterName = 'num_employees';\n\n\t\tif (filter.current[filterName]) checkAndUpdate(filterName);\n\t\tfilter.current[\n\t\t\tfilterName\n\t\t] = `num_employees={\"lte\":\"${maxEmployees}\", \"gte\":\"${minEmpolyees}\"}`;\n\n\t\thandleRequestFilter(filter.current);\n\t};\n\n\tconst handleDateFilter = () => {\n\t\tconst filterName = 'established_date';\n\n\t\tif (filter.current[filterName]) checkAndUpdate(filterName);\n\n\t\tfilter.current[\n\t\t\tfilterName\n\t\t] = `established_date={\"lte\":\"${dateRange.endDate}\", \"gte\":\"${dateRange.startDate}\"}`;\n\n\t\thandleRequestFilter(filter.current);\n\t};\n\n\tconst handleSort = (e) => {\n\t\tconst filterName = 'sort';\n\t\tif (filter.current[filterName]) checkAndUpdate(filterName);\n\n\t\tfilter.current[filterName] = `sort=${e.target.value}`;\n\n\t\thandleRequestFilter(filter.current);\n\t};\n\n\treturn (\n\t\t<SideBarStyled>\n\t\t\t<h3 className='filter-heading'>Filter Data</h3>\n\t\t\t<form className='form-filter' onSubmit={handleNameFilter}>\n\t\t\t\t<label htmlFor='filter-field' className='field-label'>\n\t\t\t\t\tSelect field\n\t\t\t\t</label>\n\t\t\t\t<select\n\t\t\t\t\tclassName='field-select'\n\t\t\t\t\tname='nameField'\n\t\t\t\t\tid='filter-field'\n\t\t\t\t\tvalue={name.nameField}\n\t\t\t\t\tonChange={handleNameChange}>\n\t\t\t\t\t<option value=''>Select field</option>\n\t\t\t\t\t<option value='name'>Name</option>\n\t\t\t\t\t<option value='business_type'>Business Type</option>\n\t\t\t\t\t<option value='address'>Address</option>\n\t\t\t\t\t<option value='email'>Email</option>\n\t\t\t\t</select>\n\t\t\t\t<label htmlFor='field-value' className='value-label'>\n\t\t\t\t\tEnter field value\n\t\t\t\t</label>\n\t\t\t\t<input\n\t\t\t\t\tclassName='form-input'\n\t\t\t\t\tname='nameValue'\n\t\t\t\t\tid='field-value'\n\t\t\t\t\tplaceholder='Field Value'\n\t\t\t\t\tonChange={handleNameChange}\n\t\t\t\t\tvalue={name.nameValue}\n\t\t\t\t/>\n\t\t\t\t<button className='filter-submit' type='submit'>\n\t\t\t\t\tFilter\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t\t<div className='filter-ranges'>\n\t\t\t\t<div className='salary-filter'>\n\t\t\t\t\t<h3 className='filter-title'>Filter By Salary</h3>\n\t\t\t\t\t<RangeSlider\n\t\t\t\t\t\tmin={ranges.salary_range && ranges.current.salary_range.min_salary}\n\t\t\t\t\t\tmax={\n\t\t\t\t\t\t\tranges.current.salary_range &&\n\t\t\t\t\t\t\tranges.current.salary_range.max_salary\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstep={0.5}\n\t\t\t\t\t\thandleChange={handleSalaryRange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<div className='num-branches-filter'>\n\t\t\t\t\t<h3 className='filter-title'>Filter By branches number</h3>\n\t\t\t\t\t<RangeSlider\n\t\t\t\t\t\tmin={\n\t\t\t\t\t\t\tranges.current.branches_range &&\n\t\t\t\t\t\t\tranges.current.branches_range.min_branches\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmax={\n\t\t\t\t\t\t\tranges.current.branches_range &&\n\t\t\t\t\t\t\tranges.current.branches_range.max_branches\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstep={1}\n\t\t\t\t\t\thandleChange={handleBranchesRange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className='num-employees-filter'>\n\t\t\t\t\t<h3 className='filter-title'>Filter By number of employees</h3>\n\t\t\t\t\t<RangeSlider\n\t\t\t\t\t\tmin={\n\t\t\t\t\t\t\tranges.current.num_employees_ranges &&\n\t\t\t\t\t\t\tranges.current.num_employees_ranges.min_num_employees\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmax={\n\t\t\t\t\t\t\tranges.current.num_employees_ranges &&\n\t\t\t\t\t\t\tranges.current.num_employees_ranges.max_num_employees\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstep={1}\n\t\t\t\t\t\thandleChange={handleEmployeesRange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className='established-date-filter'>\n\t\t\t\t\t<h3 className='filter-title'>Filter By date</h3>\n\t\t\t\t\t<div className='react-date-picker'>\n\t\t\t\t\t\t<div className='date-picker start-date-picker'>\n\t\t\t\t\t\t\t<span className='start-date'>From:</span>\n\t\t\t\t\t\t\t<DatePicker handleChange={handleStartDate} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='date-picker end-date-picker'>\n\t\t\t\t\t\t\t<span className='end-date'>To:</span>\n\t\t\t\t\t\t\t<DatePicker handleChange={handleEndDate} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<button className='filter-submit' onClick={handleDateFilter}>\n\t\t\t\t\t\t\tFilter\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='order-by'>\n\t\t\t\t<h3 className='order-title'>Sort By</h3>\n\t\t\t\t<select\n\t\t\t\t\tclassName='order-select'\n\t\t\t\t\tname='filter-field'\n\t\t\t\t\tonChange={handleSort}>\n\t\t\t\t\t<option value=''>Select field</option>\n\t\t\t\t\t{[\n\t\t\t\t\t\t'name',\n\t\t\t\t\t\t'business_type',\n\t\t\t\t\t\t'address',\n\t\t\t\t\t\t'phone',\n\t\t\t\t\t\t'num_empoyees',\n\t\t\t\t\t\t'total_branches',\n\t\t\t\t\t\t'avg_salary',\n\t\t\t\t\t].map((item, index) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<option value={`${item}`} key={index}>\n\t\t\t\t\t\t\t\t{item.charAt(0).toUpperCase() + item.slice(1)}\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t</SideBarStyled>\n\t);\n};\n\nconst SideBarStyled = styled.aside`\n\twidth: 20%;\n\tpadding: 15px;\n\tbackground-color: #d9e4dd;\n\n\t.form-filter {\n\t\tdisplay: flex;\n\t\tmargin-top: 10px;\n\t\tflex-direction: column;\n\t\tbackground-color: #fbf7f0;\n\t\tpadding: 25px;\n\n\t\tlabel {\n\t\t\tfont-size: 18px;\n\t\t}\n\t\tinput,\n\t\tselect {\n\t\t\tpadding: 6px;\n\t\t\tmargin-top: 5px;\n\t\t\toption, &::placeholder {\n\t\t\t\tfont-size: 16px;\n\t\t\t}\n\t\t}\t\t\n\t\t}\n\t\t.filter-submit{\n\t\t\tfont-size: 16px;\n\t\t\t\n\t\t\tpadding: 10px;\n\t\t\tbackground-color: #20639b;\n\t\t\tcolor: #fff;\n\t\t\tborder: none;\n\t\t\tmargin-top: 15px;\n\t\t\ttext-transform: uppercase;\n\t\t\tcursor: pointer;\n\n\t\t}\n\t}\n\n\t.filter-heading {\n\t\tfont-size: 24px;\n\t\tfont-weight: 300;\n\t\ttext-transform: uppercase;\n\t}\n\t.filter-ranges{\n\t\t.filter-title{\n\t\t\tmargin: 15px 0;\n\t\t\ttext-transform: uppercase;\n\t\t}\n\t\t.established-date-filter{\n\t\t\tbackground-color: #fbf7f0;\n\t\t\tpadding: 25px;\n\t\t\tmargin-top: 15px;\n\t\t\t.react-date-picker{\n\t\t\t\t.date-picker{\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\tflex-direction: column;\n\t\t\t\t\tjustify-content: space-between;\n\t\t\t\t\tspan{\n\t\t\t\t\t\twidth: 30%;\n\t\t\t\t\t\tfont-size: 20px;\n\t\t\t\t\t}\n\t\t\t\t\tinput{\n\t\t\t\t\t\tpadding: 6px;\n\t\t\t\t\t\tmargin-top: 5px;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t\t\n\t\t\n\t}\n\n\t.order-by{\n\t\n\t\tselect{\n\t\t\twidth: 100%;\n\t\t\tpadding: 10px;\n\t\t\tmargin-top: 10px;\n\t\t}\n\t}\n\n\n\t@media(max-width: 1450px){\n\t\twidth: 100%;\n\n\t\t.form-filter{\n\t\t\tdisplay: grid;\n\t\t\tgrid-gap:10px;\n\t\t\tgrid-template-areas: \"label1 label2\"\n\t\t\t\t\t\t\t\t \"input1 input2\"\n\t\t\t\t\t\t\t\t  \"button .\";\n\t\t\t\t\t\t\t\t  \n\t\t\t.field-label{\n\t\t\t   grid-area: label1;\n\t\t\t}\n\t\t\t.value-label{\n\t\t\t\tgrid-area: label2;\n\t\t\t}\n\t\t\t.field-select{\n\t\t\t\tgrid-area: input1;\n\t\t\t}\n\t\t\t.field-value{\n\t\t\t\tgrid-area: input2;\n\t\t\t}\n\t\t\t .filter-submit{\n\t\t\t \tgrid-area: button;\n\t\t\t }\n\t\t\t\n\t\t}\n\t\t\t.filter-ranges{\n\t\tpadding: 30px 0;\n\t\tdisplay: grid;\n\t\tgrid-gap: 30px;\n\t\tgrid-template-areas: \"filter1 filter2 filter3\"\n\t\t                      \"date date date\";\n\t\t\n\n\n\t\t.salary-filter{\n\t\t\tgrid-area: filter1;\n\t\t}\n\t\t.num-branches-filter{\n\t\t\tgrid-area: filter2;\n\n\t\t}\n\t\t.num-employees-filter{\n\t\t\tgrid-area: filter3;\n\n\t\t}\n\t\t.established-date-filter{\n\t\t\tgrid-area: date;\n\t\t\t.react-date-picker{\n\t\t\t\tdisplay: flex;\n\t\t\t\tjustify-content: space-between;\n\n\t\t\t\t.filter-submit{\n\t\t\t\t width: 30%;\n\t\t\t\talign-self: flex-end;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\t}\n\n@media(max-width: 991px){\n\t.filter-ranges{\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\t\n\t\t&>div{\n\t\t\twidth: 100%;\n\t\t\tmargin-right: auto;\n\t\t}\n\t}\n}\n\n@media(max-width: 768px){\n\t.filter-ranges{\n          .established-date-filter{\n             .react-date-picker{\n\t\t\t\t  flex-direction: column;\n\t\t\t\t  .filter-submit{\n\t\t\t\t\t  align-self: flex-start;\n\t\t\t\t  }\n}\n\t\t  }\n\t}\n}\n\n`;\nexport default React.memo(SideBar);\n","/home/nabin/practice_project_intern/data_analysis_frontend/src/components/Signup/signup.js",[],"/home/nabin/practice_project_intern/data_analysis_frontend/src/components/Login/login.js",[],"/home/nabin/practice_project_intern/data_analysis_frontend/src/components/DataTable/datatable.js",[],"/home/nabin/practice_project_intern/data_analysis_frontend/src/components/Banner/Banner.js",[],"/home/nabin/practice_project_intern/data_analysis_frontend/src/components/RangeSlider/rangeslider.js",[],"/home/nabin/practice_project_intern/data_analysis_frontend/src/components/Header/Header.js",["57","58"],"import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nimport useApiCall from '../../commons/hooks/apiCall';\nimport userContext from './../../commons/context/userContext';\n\nconst Header = () => {\n\tconst currentUser = useContext(userContext);\n\n\tconst [sendRequest, loading, error] = useApiCall();\n\n\tconst handleLogout = async () => {\n\t\tconst { uid, accessToken, client } = currentUser;\n\t\tconst headers = { uid, 'access-token': accessToken, client };\n\n\t\tconst response = await sendRequest(\n\t\t\t'DELETE',\n\t\t\t'/auth/sign_out',\n\t\t\tnull,\n\t\t\theaders\n\t\t);\n\n\t\tif (response) currentUser.logout();\n\t};\n\n\t// console.log({ loading, error });\n\n\treturn (\n\t\t<HeaderStyle>\n\t\t\t<Link className='logo' to='/'>\n\t\t\t\tLogo\n\t\t\t</Link>\n\n\t\t\t<Navigation>\n\t\t\t\t<ul className='nav-list'>\n\t\t\t\t\t{!currentUser || !currentUser.loggedIn ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<li className='nav-item'>\n\t\t\t\t\t\t\t\t<Link to='signup'>Sign Up</Link>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li className='nav-item'>\n\t\t\t\t\t\t\t\t<Link to='/login'>Login</Link>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t{/* Link to invite users form Here */}\n\t\t\t\t\t\t\t<li className='nav-item'>\n\t\t\t\t\t\t\t\t<Link to='/dashboard'>Dashboard</Link>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li className='nav-item user-email' onClick={handleLogout}>\n\t\t\t\t\t\t\t\tLogout\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</ul>\n\t\t\t</Navigation>\n\t\t</HeaderStyle>\n\t);\n};\n\nconst HeaderStyle = styled.header`\n\t\tbackground-color: #20639b;\n\t\tcolor: #fff;\n\t\ttext-transform: uppercase;\n\t\tdisplay: flex;\n\t\tpadding: 25px 45px;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t\t.logo {\n\t\t\tcursor: pointer;\n\t\t\ttext-decoration: none;\n\t\t\tcolor: #fff;\n\t\t}\n\t`,\n\tNavigation = styled.nav`\n\t\twidth: 32%;\n\n\t\t.nav-list {\n\t\t\twidth: 100%;\n\t\t\tdisplay: flex;\n\t\t\tlist-style: none;\n\t\t\tjustify-content: space-between;\n\t\t\ttransistion: all 0.3s ease-in;\n\t\t\t.nav-item {\n\t\t\t\tfont-size: 20px;\n\t\t\t\t&:hover {\n\t\t\t\t\tcursor: pointer;\n\t\t\t\t\tcolor: #ddd;\n\t\t\t\t\ttransistion: all 0.4s ease-out;\n\t\t\t\t}\n\t\t\t\ta {\n\t\t\t\t\tcolor: #fff;\n\t\t\t\t\t&:link,\n\t\t\t\t\t&:visited {\n\t\t\t\t\t\ttext-decoration: none;\n\t\t\t\t\t\ttransistion: all 0.4s ease-out;\n\t\t\t\t\t}\n\t\t\t\t\t&:hover,\n\t\t\t\t\t&:active {\n\t\t\t\t\t\tcursor: pointer;\n\t\t\t\t\t\tcolor: #ddd;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t@media (max-width: 991px) {\n\t\t\twidth: 50;\n\n\t\t\t.nav-list {\n\t\t\t\t.nav-item {\n\t\t\t\t\ta {\n\t\t\t\t\t\tfont-size: 18px;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t@media (max-width: 768px) {\n\t\t\twidth: 60%;\n\n\t\t\t.nav-list {\n\t\t\t\t.nav-item {\n\t\t\t\t\ta {\n\t\t\t\t\t\tfont-size: 16px;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t`;\n\nexport default Header;\n",["59","60"],"/home/nabin/practice_project_intern/data_analysis_frontend/src/index.js",[],"/home/nabin/practice_project_intern/data_analysis_frontend/src/components/DatePicker/DatePicker.js",[],"/home/nabin/practice_project_intern/data_analysis_frontend/src/commons/hooks/useAuth.js",[],"/home/nabin/practice_project_intern/data_analysis_frontend/src/App.js",[],{"ruleId":"61","severity":1,"message":"62","line":16,"column":22,"nodeType":"63","messageId":"64","endLine":16,"endColumn":29},{"ruleId":"61","severity":1,"message":"65","line":16,"column":31,"nodeType":"63","messageId":"64","endLine":16,"endColumn":36},{"ruleId":"66","severity":1,"message":"67","line":30,"column":5,"nodeType":"68","endLine":30,"endColumn":19,"suggestions":"69"},{"ruleId":"66","severity":1,"message":"70","line":27,"column":5,"nodeType":"68","endLine":27,"endColumn":7,"suggestions":"71"},{"ruleId":"61","severity":1,"message":"62","line":11,"column":22,"nodeType":"63","messageId":"64","endLine":11,"endColumn":29},{"ruleId":"61","severity":1,"message":"65","line":11,"column":31,"nodeType":"63","messageId":"64","endLine":11,"endColumn":36},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'limit' and 'sendRequest'. Either include them or remove the dependency array.","ArrayExpression",["76"],"React Hook useEffect has a missing dependency: 'sendRequest'. Either include it or remove the dependency array.",["77"],"no-native-reassign",["78"],"no-negated-in-lhs",["79"],{"desc":"80","fix":"81"},{"desc":"82","fix":"83"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [page, filter, sendRequest, limit]",{"range":"84","text":"85"},"Update the dependencies array to be: [sendRequest]",{"range":"86","text":"87"},[876,890],"[page, filter, sendRequest, limit]",[752,754],"[sendRequest]"]